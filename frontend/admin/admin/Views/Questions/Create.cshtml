@model admin.ViewModels.AddQuestionVm

@{
    ViewData["Title"] = "Inserir questão";

    var param = new Dictionary<string, string>();
    param.Add("testId", $"{Model.IdTest}");
}

<h3>Nova questão</h3>

<hr />
<form asp-action="Create">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <div class="row">
        <div class="col-md-4">
            @*
            <div class="form-group">
            <label asp-for="QuestionTypeId" class="control-label"></label>
            <input asp-for="QuestionTypeId" class="form-control" value="3" />
            <span asp-validation-for="QuestionTypeId" class="text-danger"></span>
            </div>
            *@
            <div class="form-group">
                @Html.HiddenFor(x => x.IdTest)

                <label asp-for="mQuestion.Question" class="control-label"></label>
                <input asp-for="mQuestion.Question" class="form-control" value="Teste de questão" />
                <span asp-validation-for="mQuestion.Question" class="text-danger"></span>
            </div>
        </div>
    </div>
















    @*
    @if (ViewBag.AvailablePositions != null)
    {
    var list = ((List<CompanyPositionInfo>)ViewBag.AvailablePositions);
    <select class="form-control" id="posicao" name="CompanyPositionResponseList[0].CompanyPositionInfo.CompanyPositionId">
    @if (list == null || list.Count == 0)
    {
    <option value="">Não existem cargos disponíveis para associação.</option>
    }
    else
    {
    @foreach (var posicao in list)
    {
    <option value="@posicao.CompanyPositionId">@posicao.CompanyPositionName</option>
    }
    }
    </select>
    }
    *@


        @{
            var list = new Dictionary<int, string>() {
                { 1,   "Text" },
                { 2,   "Checkboxes" },
                { 3,   "Dropdown" },
                { 4,   "Multiple choice" }
            };
        }

        <select class="form-control" id="posicao" name="mQuestion.QuestionTypeId"> 
            @foreach (var posicao in list)
            {
                <option value="@posicao.Key">@posicao.Value</option>
            }
        </select>












    <div class="row">
        <div class="col-md-4">
            <div class="form-group">
                <label asp-for="mQuestion.Description" class="control-label"></label>
                <input asp-for="mQuestion.Description" class="form-control" value="Descrição do teste de questão" />
                <span asp-validation-for="mQuestion.Description" class="text-danger"></span>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-4">
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="mQuestion.IsRequired" /> @Html.DisplayNameFor(model => model.mQuestion.IsRequired)
                </label>
            </div>
        </div>
    </div>


    <div class="row mt-md-4">
        <div class="col-md-4">
                <input type="submit" value="Salvar" class="btn btn-md btn-success col-md-5" />
                <span class="col-md-2"></span>
                <a class="btn btn-md btn-outline-danger col-md-5" asp-action="Details" asp-controller="Tests" asp-all-route-data="param" >Cancelar</a>
        </div>
    </div>
</form>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}